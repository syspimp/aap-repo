- name: "Launch a vm in vmware from a golden image and callback to aap for provisioning"
  hosts: compute4
  vars:
    ESXIHOST: compute4.tfound.org
  tasks:
  - name: "esxi_host: copy golden image directory on esxi host"
    shell: |
      ssh root@{{ ESXIHOST }} "if [ ! -e '{{ VMWROOT }}/{{ NEWVM }}' ]  \
      then \
        cp -R {{ VMWROOT }}/{{ OUTPUT }} {{ VMWROOT }}/{{ NEWVM }} \
      fi"
    delegate_to: localhost

  - name: "Create a virtual machine and attach golden vmdk"
    community.vmware.vmware_guest:
      hostname: "{{ ESXIHOST }}"
      username: "{{ VCENTER_USER }}"
      password: "{{ ROOTPASS }}"
      validate_certs: no
      folder: "/ha-datacenter/vm/"
      name: "{{ NEWVM }}"
      state: poweredon
      guest_id: rhel7_64Guest
      # Add another disk from an existing VMDK
      disk:
      - filename: "[datastore1] {{ NEWVM }}/{{ OUTPUT }}.vmdk"
        datastore: "datastore1"
        size_gb: "{{ VMDISKSIZE }}"
      hardware:
        memory_mb: "{{ VMMEM }}"
        num_cpus: "{{ VMCPUS }}"
        num_cpu_cores_per_socket: 2
        scsi: paravirtual
        memory_reservation_lock: True
        mem_limit: 8096
        mem_reservation: 4096
        cpu_limit: 8096
        cpu_reservation: 4096
        max_connections: 5
        hotadd_cpu: True
        hotremove_cpu: True
        hotadd_memory: False
        version: 12 # Hardware version of virtual machine
        boot_firmware: "efi"
      networks:
      - name: VM Network
        #mac: aa:bb:dd:aa:00:14
      customization:
        hostname: "{{ NEWVM }}"
      # would be nice if this worked
      #customvalues:
      #- key: "guestinfo.hostname"
      #  value: "{{ NEWVM }}"
      #- key: "guestinfo.role"
      #  value: "{{ ROLE }}"
      wait_for_ip_address: false
    delegate_to: localhost
    register: deploy

  - name: "what that mouth do?"
    debug: var=deploy

  - name: "Power off virtual machine"
    community.vmware.vmware_guest:
      hostname: "{{ ESXIHOST }}"
      username: "{{ VCENTER_USER }}"
      password: "{{ ROOTPASS }}"
      validate_certs: no
      name: "{{ NEWVM }}"
      state: poweredoff
    delegate_to: localhost

  - name: "Let's wait 15 seconds"
    pause:
      seconds: 15

  - name: "esxi_host: add some parameters to the vmx file on the hypervisor for the hostname"
    shell: |
      echo -e "\nguestinfo.hostname = \"{{ NEWVM }}\"" >> {{ VMWROOT }}/{{ NEWVM }}/{{ NEWVM }}.vmx
      echo -e "\nguestinfo.role = \"{{ ROLE }}\"" >> {{ VMWROOT }}/{{ NEWVM }}/{{ NEWVM }}.vmx
      echo -e "\nguestinfo.secondaryrole = \"{{ SECONDARYROLE }}\"" >> {{ VMWROOT }}/{{ NEWVM }}/{{ NEWVM }}.vmx

#  - name: "Expand disks for virtual machine using uuid"
#    community.vmware.vmware_guest_disk:
#      hostname: "{{ ESXIHOST }}"
#      username: "{{ VCENTER_USER }}"
#      password: "{{ ROOTPASS }}"
#      validate_certs: no
#      #name: "{{ NEWVM }}"
#      uuid: "{{ deploy.instance.instance_uuid }}"
#      folder: "/ha-datacenter/vm/"
#      disk:
#        - size_gb: "{{ VMDISKSIZE }}"
#          type: "thin"
#          datastore: "datastore1"
#          state: present
#          scsi_controller: "1"
#          unit_number: "1"
#          scsi_type: "paravirtual"
#          disk_mode: "paravirtual"
#    delegate_to: localhost
#    register: disk_facts

  - name: "Power on virtual machine"
    community.vmware.vmware_guest:
      hostname: "{{ ESXIHOST }}"
      username: "{{ VCENTER_USER }}"
      password: "{{ ROOTPASS }}"
      validate_certs: no
      name: "{{ NEWVM }}"
      state: poweredon
    delegate_to: localhost

  - name: "Let's wait a minute for it to boot and populate it's ip address to vmware"
    pause:
      minutes: 1

  - name: "Update the ESXI Inventory"
    ignore_errors: yes
    uri:
      url: https://{{ tower.server }}/api/v2/inventory_sources/{{ item }}/update/
      validate_certs: no
      method: POST
      user: "{{ tower.user }}"
      password: "{{ tower.pass }}"
      force_basic_auth: yes
      status_code: [201,202]
      body_format: json
    with_items:
      - "{{ tower.esxi_inventory_ids }}"
    delegate_to: localhost
