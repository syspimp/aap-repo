- hosts: all
  vars:
    EE_TYPE: "hybrid"
    VERBOSE: 3
    USE_CACHE: "--no-cache"
    TAG: "{{ EE_TYPE }}z7:latest"
    UPSTREAM_REPO: docker.io/syspimp/ansible-ee
    UPSTREAM_TAG: "{{ EE_TYPE }}"
    dockerio_user: "set in extra vars or group_vars/all"
    dockerio_pass: "set in extra vars or group_vars/all"
  tasks:
  - name: "Check for 10 mins if ansible.cfg file exists in playbook dir"
    stat:
      path: "/opt/aap-repo/execution-environments/{{ EE_TYPE }}/ansible.cfg"
    retries: 10
    delay: 60
    until: playconfig.stat.exists == true
    register: playconfig

  - name: "Fail when ansible.cfg not configured"
    ansible.builtin.fail:
      msg: "You need to read and configure /opt/aap-repo/execution-environents/{{ EE_TYPE }}/ansible.cfg"
    when: playconfig.stat.exists == false

  - name: "**Getting latest changes" 
    shell: |
      git pull
    args:
      chdir: "/opt/aap-repo"

  - name: "**Removing old images" 
    shell: |
      ./cleanup-podman-storage.sh
    args:
      chdir: "/opt/aap-repo/execution-environments"

  - name: "**Building the image" 
    environment:
      subuser: "{{ rhsm_username }}"
      subpass: "{{ rhsm_password }}"
    shell: |
      podman login -u "${subuser}" -p "${subpass}" registry.redhat.io
      ansible-builder build -t {{ TAG }} -v {{ VERBOSE }} {{ USE_CACHE }}
    args:
      chdir: "/opt/aap-repo/execution-environments/{{ EE_TYPE }}"

  - name: "**tagging the container image"
    shell: |
      podman tag localhost/{{ TAG }} {{ UPSTREAM_REPO }}:{{ UPSTREAM_TAG }}
    args:
      chdir: "/opt/aap-repo/execution-environments/{{ EE_TYPE }}"

  - name: "**Pushing to the cloud..."
    environment:
      dockeruser: "{{ dockerio_user }}"
      dockerpass: "{{ dockerio_pass }}"
    shell: |
      echo ${dockeruser}
      podman login -u "${dockeruser}" -p "${dockerpass}" docker.io
      podman push {{ UPSTREAM_REPO }}:{{ UPSTREAM_TAG }}
    args:
      chdir: "/opt/aap-repo/execution-environments/{{ EE_TYPE }}"

