- name: "Delete a vm in vmware by name"
  hosts: "{{ ESXIHOST | default('compute4.tfound.org',True) }}"
  vars:
    ESXIHOST: compute4.tfound.org
  tasks:
#  - name: "Power off virtual machine"
#    community.vmware.vmware_guest:
#      hostname: "{{ ESXIHOST }}"
#      username: "{{ VCENTER_USER }}"
#      password: "{{ ROOTPASS }}"
#      folder: "/ha-datacenter/vm/"
#      validate_certs: no
#      name: "{{ NEWVM }}"
#      state: poweredoff
#    delegate_to: localhost
#
#  - name: "Remove disks from virtual machine using name"
#    community.vmware.vmware_guest_disk:
#      hostname: "{{ ESXIHOST }}"
#      username: "{{ VCENTER_USER }}"
#      password: "{{ ROOTPASS }}"
#      validate_certs: no
#      name: "{{ NEWVM }}"
#      folder: "/ha-datacenter/vm/"
#      disk:
#        - state: absent
#          scsi_controller: 1
#          unit_number: 1
#          destroy: yes
#    delegate_to: localhost
#    register: disk_facts
#
  - name: "Delete a virtual machine"
    community.vmware.vmware_guest:
      hostname: "{{ ESXIHOST }}"
      username: "{{ VCENTER_USER }}"
      password: "{{ ROOTPASS }}"
      validate_certs: no
      name: "{{ NEWVM }}"
      delete_from_inventory: True
      state: absent
      force: yes
    delegate_to: localhost
    register: deploy

  - name: "Let's wait 15 seconds"
    pause:
      seconds: 15

- name: "Block remove from Ansible Tower inventory"
  block:
    - name: "Get host id to remove Inventory"
      uri:
        url: "https://{{ tower.server }}/api/v2/hosts/?name={{ NEWVM }}"
        validate_certs: no
        method: GET
        user: "{{ tower.user }}"
        password: "{{ tower.pass }}"
        force_basic_auth: yes
        status_code: [200,202,204]
        body_format: json
      register: hostidcheck

    - name: "Set the host_id fact"
      set_fact:
        host_id: "{{ hostidcheck.json.results[0].id }}"

    - name: "Remove host from the Inventory"
      uri:
        url: "https://{{ tower.server }}/api/v2/hosts/{{ host_id }}/"
        validate_certs: no
        method: DELETE
        user: "{{ tower.user }}"
        password: "{{ tower.pass }}"
        force_basic_auth: yes
        status_code: [201,202,204]
        body_format: json

